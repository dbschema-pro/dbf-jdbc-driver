buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.install4j.install4j:gradle_plugin:7.0.8"
    }
}

plugins{
    id 'org.hidetake.ssh' version '2.7.1'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'groovy'
}
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'application'
apply plugin: 'distribution'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(15)
    }
}

dependencies {
    implementation 'com.github.albfernandez:javadbf:1.14.0'
    implementation 'com.h2database:h2:2.2.224'
    testImplementation 'junit:junit:4.13.2'
}

compileJava{
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

jar {
    archiveFileName ="dbschema-dbf-jdbc${driverVersion}.jar"
    manifest {
        attributes 'Main-Class': 'com.wisecoders.dbschema.dbf.JdbcDriver'
        attributes 'Specification-Version': "$driverVersion"
        attributes 'Specification-Vendor': "Wise Coders"
        attributes 'Implementation-Vendor-Id': "dbschema.com"
        attributes 'Implementation-Vendor': "Wise Coders"
        attributes 'Implementation-Version': new Date().format( 'yyMMdd' )
    }
}


task zip(type: Zip, dependsOn:['clean','jar']) {
    archiveFileName.set 'DBFJdbcDriver.zip'
    from configurations.runtimeClasspath.allArtifacts.files
    from configurations.runtimeClasspath
    from "build/libs" include "*.jar"
}

task copyInUserHome(type: Copy,dependsOn:['clean','jar']) {
    from configurations.runtimeClasspath.allArtifacts.files
    from configurations.runtimeClasspath
    into "${System.getProperty('user.home')}/.DbSchema/drivers/DBF/"
}


group = "com.wisecoders"
version = "1.1.2"


java {
    withJavadocJar()
    withSourcesJar()
}
javadoc {
    options.addBooleanOption('html5', true)
}
artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'dbf-jdbc-driver'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'DBF-JDBC-Driver'
                description = 'DBF and FoxPro JDBC Driver'
                url = 'https://dbschema.com/jdbc-driver/DBF.html'
                /*properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]*/
                licenses {
                    license {
                        name = 'GPL-3Plus dual license. Contributions only to https://github.com/wise-coders/dbf-jdbc-driver'
                        url = 'https://github.com/wise-coders/dbf-jdbc-driver'
                    }
                }
                developers {
                    developer {
                        id = 'wisecoders'
                        name = 'Wise Coders GmbH'
                        email = 'support@wisecoders.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/wise-coders/dbf-jdbc-driver'
                    developerConnection = 'scm:git:ssh://github.com/wise-coders/dbf-jdbc-driver'
                    url = 'https://github.com/wise-coders/dbf-jdbc-driver'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.properties["sonatypeUsername"]
                password = project.properties["sonatypePassword"]
            }
        }
    }
}
signing {
    sign publishing.publications.mavenJava
}


/*
task uploadArchives {
    repositories {
        mavenDeployer {
            //beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'DBF and FoxPro JDBC Driver'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'DBF and FoxPro JDBC Driver'
                url 'https://dbschema.com/jdbc-driver/DBF.html'

                scm {
                    connection 'scm:git:git://github.com/wise-coders/dbf-jdbc-driver'
                    developerConnection 'scm:git:git://github.com/wise-coders/dbf-jdbc-driver'
                    url 'https://github.com/wise-coders/dbf-jdbc-driver'
                }

                licenses {
                    license {
                        name 'GPL-3Plus dual license. Contributions only to https://github.com/wise-coders/dbf-jdbc-driver'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'wisecoders'
                        name 'Wise Coders GmbH'
                        email 'admin@wisecoders.com'
                    }
                }
            }
        }
    }
}


 */